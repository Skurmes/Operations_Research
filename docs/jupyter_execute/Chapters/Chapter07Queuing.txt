pip install ciw

import ciw

N = ciw.create_network(
    arrival_distributions = [ciw.dists.Exponential(0.75), # 45 customers arrive every hour
                             ciw.dists.NoArrivals(), #No arrivals at the other nodes
                             ciw.dists.NoArrivals()],
    service_distributions = [ciw.dists.Exponential(0.5), #1 order is made every 10 minutes
                             ciw.dists.Exponential(1.0),  #A cashier takes one payments every minute
                             ciw.dists.Uniform(2,6)],  #A server serves one order in 2 to 6 minutes   #Customer exits the queue
    routing = [[0.0, 1.0, 0.0],  #The matrix for the network
               [0.0,0.0,1.0],
               [0.0,0.0,0.0]],
    number_of_servers = [1,1,1] #Number of servers
)

average_waits = []
for trial in range(20):
  ciw.seed(trial)
  Q = ciw.Simulation(N)
  Q.simulate_until_max_time(200)
  recs = Q.get_all_records()
  waits = [r.waiting_time for r in recs]
  mean_wait = sum(waits)/len(waits)
  average_waits.append(mean_wait)
print (sum(average_waits)/len(average_waits))

completed_custs = []
for trial in range(20):
  ciw.seed(trial)
  Q = ciw.Simulation(N)
  Q.simulate_until_max_time(200)
  recs = Q.get_all_records()
  num_completed = len([r for r in recs if r.node==3 and r.arrival_date < 180])
  completed_custs.append(num_completed)

sum(completed_custs)/len(completed_custs)

N = ciw.create_network(
    arrival_distributions = [ciw.dists.Exponential(0.75), # 45 customers arrive every hour
                             ciw.dists.NoArrivals(), #No arrivals at the other nodes
                             ciw.dists.NoArrivals(),
                             ciw.dists.NoArrivals(),
                             ciw.dists.NoArrivals()],
    service_distributions = [ciw.dists.Exponential(0.5), #1 order is made every 2 minutes
                             ciw.dists.Exponential(1.0),  #A cashier takes one payments every minute
                             ciw.dists.Exponential(0.5),  #A server serves one order two minutes
                             ciw.dists.Exponential(0.25),    #1 order is given out every 4 minutes]2
                             ciw.dists.Deterministic(0.0)],   #Customer exits the queue
    routing = [[0.0, 1.0, 0.0, 0.0, 0.0],  #The matrix for the network
               [0.0,0.0,1.0,0.0, 0.0],
               [0.0,0.0,0.0,0.3,0.7],
               [0.0,0.0,0.0,0.0,1.0],
               [0.0, 0.0, 0.0, 0.0, 0.0]],
    number_of_servers = [1, 1, 1, 1, 1] #Number of servers
)

average_waits = []
for trial in range(20):
  ciw.seed(trial)
  Q = ciw.Simulation(N)
  Q.simulate_until_max_time(200)
  recs = Q.get_all_records()
  waits = [r.waiting_time for r in recs]
  mean_wait = sum(waits)/len(waits)
  average_waits.append(mean_wait)
print (sum(average_waits)/len(average_waits))

completed_custs = []
for trial in range(20):
  ciw.seed(trial)
  Q = ciw.Simulation(N)
  Q.simulate_until_max_time(200)
  recs = Q.get_all_records()
  num_completed = len([r for r in recs if r.node==5 and r.arrival_date < 180])
  completed_custs.append(num_completed)

sum(completed_custs)/len(completed_custs)

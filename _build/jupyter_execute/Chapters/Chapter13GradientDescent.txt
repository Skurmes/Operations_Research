import matplotlib.pyplot as plt

# x and y coordinates of the mountain
mountain_x=[0,5,10,15,20]
mountain_y=[6,10,8,9,5]

# x and y stop coordinates
stop_x=[5,5,7.5,5,7.5]
stop_y=[10,8,7,6,4]

#plotting the mountain, stops, and path
plt.plot(mountain_x,mountain_y)
plt.scatter(stop_x,stop_y)
plt.plot(stop_x,stop_y)

#visualize the grid 
plt.grid()


#@title Graph that Shows the Above Points
import matplotlib.pyplot as plt
import numpy as np

xpoints = np.array([0.5 , 2.3 , 2.9])
ypoints = np.array([1.4 , 1.9 , 3.2])

plt.plot(xpoints, ypoints, 'o')
plt.show()



#@title Gradient Descent example graph
import matplotlib.pyplot as plt
import numpy as np

def f(x):
    return (x+5)**2
print(f(5))

def derf(x):
    return 2*(x+5)
i=3
w=0.05
x=i

def gradient_descent(x,weight):
    return x-weight*derf(x)

X=np.arange(-6,5,0.00004)
Y=[f(i) for i in X]

X1=[]

y1=[]

for i in range(100):
    X1.append(x)
    y1.append(f(x))
    x=gradient_descent(x,w)

plt.plot(X,Y)
plt.scatter(X1,y1,marker="+",color="green")
plt.show()



import matplotlib.pyplot as plt
import numpy as np

def f(x):
    return (x-3)**4
print(f(5))

def derf(x):
    return 4*(x-3)
i=5
w=0.05 
x=i

def gradient_descent(x,weight):
    return x-weight*derf(x)

X=np.arange(2,6,0.4)
Y=[f(i) for i in X]

X1=[]
y1=[]

for i in range(5):
    X1.append(x)
    y1.append(f(x))
    x=gradient_descent(x,w)
   
plt.plot(X,Y)
plt.scatter(X1,y1,marker="+",color="black")
plt.show()

